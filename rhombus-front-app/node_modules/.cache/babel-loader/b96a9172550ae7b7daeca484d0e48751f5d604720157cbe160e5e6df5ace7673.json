{"ast":null,"code":"var _jsxFileName = \"/Users/christiandaish/PycharmProjects/rhombusdataProject/rhombus-front-app/src/App.js\",\n  _s = $RefreshSig$();\n// This javascipt represents the front end display which interacts with the backend via the Django API. It comprises several components.\n// It was developed by Christian Daish on the 26-MAR-2024 for Rhombus AI.\n// This is version 1.0.260324\n\nimport React, { useState } from 'react';\nimport FileUpload from './fileupload'; // Adjusted FileUpload component that includes upload functionality\nimport DataTable from './processeddatatable'; // Component for displaying the data\nimport Processeddatacard from \"./processeddatacard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState(''); // New state to track upload status\n  const [processedData, setProcessedData] = useState(null); //New state for storing processed data\n  const [errorMessage, setErrorMessage] = useState('');\n  const [thresholdVar, setThresholdVar] = useState('');\n\n  // Function to process file data (e.g., displaying it in DataTable)\n  const handleFileData = parsedData => {\n    setTableData(parsedData);\n  };\n\n  //Function to handle changing value in table\n  const handleTypeChange = (key, newValue) => {\n    // Assume processedData is an object where you can directly modify the value by key\n    const updatedData = {\n      ...processedData,\n      [key]: newValue\n    };\n    setProcessedData(updatedData);\n  };\n\n  // Function to handle threshold selection\n  const handleThresholdChange = event => {\n    setThresholdVar(event.target.value);\n  };\n  const resetProcessedData = () => {\n    setProcessedData(null); // Resetting processedData to its initial state\n    setErrorMessage(''); // Clearing any error messages\n  };\n  // Add a function to handle upload errors\n  const handleUploadError = errorMessage => {\n    alert(errorMessage); // Display the error message in an alert box\n  };\n\n  // Function to handle upload success\n  const handleUploadSuccess = data => {\n    console.log('Upload successful:', data);\n    setUploadStatus('Upload successful!'); // Update upload status message\n    setProcessedData(data); //Assuming 'data' is the processed data you want to display\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"File Infer and Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"by Christian Daish 28-MAR-2024\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Step 1. Choose file \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 35\n      }, this), \" Step 2. Choose desired category threshold (i.e., proportion of unique values) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this), \" Step 3. Press 'Process Data' button to infer and convert data \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 91\n      }, this), \" Step 4. Press 'Change Type' button next to value field, select the desired type.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleThresholdChange,\n      value: thresholdVar,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Categorical threshold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0.5\",\n        children: \"0.5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0.6\",\n        children: \"0.6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0.7\",\n        children: \"0.7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0.8\",\n        children: \"0.8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0.9\",\n        children: \"0.9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1.0\",\n        children: \"1.0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      onFileLoad: handleFileData,\n      onUploadSuccess: handleUploadSuccess,\n      onResetProcessedData: resetProcessedData,\n      onUploadError: handleUploadError,\n      thresholdVar: thresholdVar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 26\n    }, this), \" \", /*#__PURE__*/_jsxDEV(DataTable, {\n      data: tableData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), processedData && /*#__PURE__*/_jsxDEV(Processeddatacard, {\n      data: processedData,\n      onTypeChange: handleTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 27\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"bXUM62lj+NwbrN+x8wSBoY6xZyc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FileUpload","DataTable","Processeddatacard","jsxDEV","_jsxDEV","App","_s","tableData","setTableData","uploadStatus","setUploadStatus","processedData","setProcessedData","errorMessage","setErrorMessage","thresholdVar","setThresholdVar","handleFileData","parsedData","handleTypeChange","key","newValue","updatedData","handleThresholdChange","event","target","value","resetProcessedData","handleUploadError","alert","handleUploadSuccess","data","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onFileLoad","onUploadSuccess","onResetProcessedData","onUploadError","onTypeChange","_c","$RefreshReg$"],"sources":["/Users/christiandaish/PycharmProjects/rhombusdataProject/rhombus-front-app/src/App.js"],"sourcesContent":["// This javascipt represents the front end display which interacts with the backend via the Django API. It comprises several components.\n// It was developed by Christian Daish on the 26-MAR-2024 for Rhombus AI.\n// This is version 1.0.260324\n\nimport React, { useState } from 'react';\nimport FileUpload from './fileupload'; // Adjusted FileUpload component that includes upload functionality\nimport DataTable from './processeddatatable'; // Component for displaying the data\nimport Processeddatacard from \"./processeddatacard\";\n\nfunction App() {\n  const [tableData, setTableData] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState(''); // New state to track upload status\n  const [processedData, setProcessedData] = useState(null); //New state for storing processed data\n  const [errorMessage, setErrorMessage] = useState('')\n  const [thresholdVar, setThresholdVar] = useState('');\n\n  // Function to process file data (e.g., displaying it in DataTable)\n  const handleFileData = (parsedData) => {\n    setTableData(parsedData);\n  };\n\n  //Function to handle changing value in table\n  const handleTypeChange = (key, newValue) => {\n      // Assume processedData is an object where you can directly modify the value by key\n      const updatedData = { ...processedData, [key]: newValue };\n      setProcessedData(updatedData);\n    };\n\n  // Function to handle threshold selection\n  const handleThresholdChange = (event) => {\n    setThresholdVar(event.target.value);\n  };\n\n\n  const resetProcessedData = () => {\n    setProcessedData(null); // Resetting processedData to its initial state\n    setErrorMessage(''); // Clearing any error messages\n  };\n  // Add a function to handle upload errors\n  const handleUploadError = (errorMessage) => {\n    alert(errorMessage); // Display the error message in an alert box\n  };\n\n  // Function to handle upload success\n  const handleUploadSuccess = (data) => {\n    console.log('Upload successful:', data);\n    setUploadStatus('Upload successful!'); // Update upload status message\n    setProcessedData(data); //Assuming 'data' is the processed data you want to display\n  };\n\n  return (\n      <div className=\"App\">\n        <h1>File Infer and Convert</h1>\n        <h2>by Christian Daish 28-MAR-2024</h2>\n          <h3>Step 1. Choose file <br/> Step 2. Choose desired category threshold (i.e., proportion of unique\n              values) <br/> Step 3. Press 'Process Data' button to infer and convert data <br/> Step 4. Press 'Change Type' button next to value field, select the desired type.</h3>\n          <select onChange={handleThresholdChange} value={thresholdVar}>\n              <option value=\"\">Categorical threshold</option>\n              <option value=\"0.5\">0.5</option>\n              <option value=\"0.6\">0.6</option>\n              <option value=\"0.7\">0.7</option>\n              <option value=\"0.8\">0.8</option>\n              <option value=\"0.9\">0.9</option>\n              <option value=\"1.0\">1.0</option>\n              {/* Add more options as needed */}\n          </select>\n\n          <FileUpload onFileLoad={handleFileData} onUploadSuccess={handleUploadSuccess}\n                    onResetProcessedData={resetProcessedData} onUploadError={handleUploadError} thresholdVar={thresholdVar}/>\n        {uploadStatus && <p>{uploadStatus}</p>} {/* Display upload status */}\n        <DataTable data={tableData}/>\n        {processedData && <Processeddatacard data={processedData} onTypeChange={handleTypeChange}/>} {/* Conditionally render Processeddatacard */}\n      </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}