{"ast":null,"code":"var _jsxFileName = \"/Users/christiandaish/PycharmProjects/rhombusdataProject/rhombus-front-app/src/dictionarytotable.js\",\n  _s = $RefreshSig$();\n// This component converts the processed data to a useable form in a table and allows for the modification of data.\n\nimport React, { useState } from 'react';\nimport './dictionarytotable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DictionaryTable = ({\n  data,\n  onTypeChange\n}) => {\n  _s();\n  // State to track which cell's dropdown is active\n  const [activeDropdown, setActiveDropdown] = useState(null);\n  const renderValue = value => {\n    // Check if the value is 'object' and change it to 'Text'\n    if (value === 'object') {\n      return 'Text';\n    }\n    if (value === 'datetime64[ns]') {\n      return 'Date/Time';\n    }\n    if (value === 'float64') {\n      return 'Decimal Number';\n    }\n    if (value === 'float32') {\n      return 'Decimal Number (Single Precision)';\n    }\n    if (value === 'int64') {\n      return 'Whole Number';\n    }\n    if (value === 'int32') {\n      return 'Whole Number (Standard)';\n    }\n    if (value === 'bool') {\n      return 'True/False';\n    }\n    if (value === 'category') {\n      return 'Category';\n    }\n    if (value === 'complex') {\n      return 'Complex Number';\n    }\n    return value.toString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Object.keys(data).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Object.entries(data).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [renderValue(value), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveDropdown(key),\n            children: \"Change Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), activeDropdown === key && /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => onTypeChange(key, e.target.value),\n            value: value,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Object\",\n              children: \"Object\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Text\",\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Whole Number\",\n              children: \"Whole Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Whole Number (Standard)\",\n              children: \"Whole Number (Standard)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Decimal Number\",\n              children: \"Decimal Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Decimal Number (Single Precision)\",\n              children: \"Decimal Number (Single Precision)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"True/False\",\n              children: \"True/False\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Date/Time\",\n              children: \"Date/Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Time Difference\",\n              children: \"Time Diff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Category\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Complex Number\",\n              children: \"Complex NUmber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(DictionaryTable, \"pyF5VtWcSG89rmb2hon8MXMhBCg=\");\n_c = DictionaryTable;\nexport default DictionaryTable;\nvar _c;\n$RefreshReg$(_c, \"DictionaryTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DictionaryTable","data","onTypeChange","_s","activeDropdown","setActiveDropdown","renderValue","value","toString","className","children","Object","keys","map","key","fileName","_jsxFileName","lineNumber","columnNumber","entries","index","onClick","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/christiandaish/PycharmProjects/rhombusdataProject/rhombus-front-app/src/dictionarytotable.js"],"sourcesContent":["// This component converts the processed data to a useable form in a table and allows for the modification of data.\n\nimport React, { useState } from 'react';\nimport './dictionarytotable.css';\n\nconst DictionaryTable = ({ data, onTypeChange }) => {\n  // State to track which cell's dropdown is active\n  const [activeDropdown, setActiveDropdown] = useState(null);\n\n  const renderValue = (value) => {\n      // Check if the value is 'object' and change it to 'Text'\n      if (value === 'object') {\n          return 'Text';\n      }\n      if (value === 'datetime64[ns]') {\n          return 'Date/Time';\n      }\n      if (value === 'float64') {\n          return 'Decimal Number';\n      }\n      if (value === 'float32') {\n          return 'Decimal Number (Single Precision)';\n      }\n      if (value === 'int64') {\n          return 'Whole Number';\n      }\n      if (value === 'int32') {\n          return 'Whole Number (Standard)';\n      }\n      if (value === 'bool') {\n          return 'True/False';\n      }\n      if (value === 'category') {\n          return 'Category';\n      }\n      if (value === 'complex') {\n          return 'Complex Number';\n      }\n      return value.toString();\n  }\n\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          {Object.keys(data).map((key) => (\n            <th key={key}>{key}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {Object.entries(data).map(([key, value], index) => (\n            <td key={index}>\n              {/* Use renderValue function to display the value */}\n              {renderValue(value)}\n              <button onClick={() => setActiveDropdown(key)}>Change Type</button>\n              {activeDropdown === key && (\n                  <select onChange={(e) => onTypeChange(key, e.target.value)} value={value}>\n                      <option value=\"Object\">Object</option>\n                      <option value=\"Text\">Text</option>\n                      <option value=\"Whole Number\">Whole Number</option>\n                      <option value=\"Whole Number (Standard)\">Whole Number (Standard)</option>\n                      <option value=\"Decimal Number\">Decimal Number</option>\n                      <option value=\"Decimal Number (Single Precision)\">Decimal Number (Single Precision)</option>\n                      <option value=\"True/False\">True/False</option>\n                      <option value=\"Date/Time\">Date/Time</option>\n                      <option value=\"Time Difference\">Time Diff</option>\n                      <option value=\"Category\">Category</option>\n                      <option value=\"Complex Number\">Complex NUmber</option>\n                      {/* Add more types as needed */}\n                  </select>\n              )}\n            </td>\n          ))}\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default DictionaryTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}